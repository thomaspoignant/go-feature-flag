name: Release
on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  actions: read

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          check-latest: true
      - name: Set up Maven
        uses: stCarolas/setup-maven@d6af6abeda15e98926a57b5aa970a96bb37f97d1 # v5
        with:
          maven-version: 3.8.2
      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 23
      - name: Install ICU packages
        run: sudo apt-get update && sudo apt-get install -y libicu-dev
      - uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: "7.0.x"
      - run: make vendor
      - run: make provider-tests

  wasm-release:
    needs: integration-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Echo Release wasm version
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "Release wasm version: ${VERSION}"
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          check-latest: true
      - uses: acifani/setup-tinygo@db56321a62b9a67922bb9ac8f9d085e218807bb3 # v2.0.1
        with:
          tinygo-version: "0.37.0"
      - name: Release WASM
        env:
          VERSION: ${{ env.VERSION }}
        run: ./.github/ci-scripts/release_wasm.sh "$VERSION"
      - name: Upload assets
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        env:
          VERSION: ${{ env.VERSION }}
        with:
          files: |
            ./out/release-wasm/gofeatureflag-evaluation_${VERSION}.wasi
            ./out/release-wasm/gofeatureflag-evaluation_${VERSION}.wasm

      - name: Checkout wasm-releases repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: go-feature-flag/wasm-releases
          path: wasm-releases
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Copy WASM files to wasm-releases repository
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          mkdir -p wasm-releases/evaluation
          cp ./out/release-wasm/gofeatureflag-evaluation_${VERSION}.wasi wasm-releases/evaluation/
          cp ./out/release-wasm/gofeatureflag-evaluation_${VERSION}.wasm wasm-releases/evaluation/

      - name: Create Pull Request to wasm-releases
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        env:
          VERSION: ${{ env.VERSION }}
        with:
          branch: publish-wasm-evaluation-${{ env.VERSION }}
          title: "feat: Publish WASM files for ${{ env.VERSION }}"
          body: |
            Automated pull request to publish evaluation WASM files for release ${{ env.VERSION }}

            This PR includes:
            - gofeatureflag-evaluation_${{ env.VERSION }}.wasi
            - gofeatureflag-evaluation_${{ env.VERSION }}.wasm
          commit-message: Publish evaluation WASM files for ${{ env.VERSION }}
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          labels: automerge
          path: wasm-releases
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  goreleaser:
    needs: integration-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Free space on runner
        run: ./.github/ci-scripts/free_space.sh

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.1.1

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_SIGNING_KEY }}
          passphrase: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 60m
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

  dockerhub-lint:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
      - wasm-release
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag-lint
          readme: "./cmd/lint/DOCKERHUB_thomaspoignant.md"
      - name: Release readme to DockerHub gofeatureflag
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: gofeatureflag/go-feature-flag-lint
          readme: "./cmd/lint/DOCKERHUB.md"

  dockerhub-cli:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
      - wasm-release
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: gofeatureflag/go-feature-flag-cli
          readme: "./cmd/cli/DOCKERHUB.md"

  dockerhub-relay-proxy:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
      - wasm-release
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag-relay-proxy
          readme: "./cmd/relayproxy/DOCKERHUB_deprecated.md"

  dockerhub-go-feature-flag-server:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
      - wasm-release
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag
          readme: "./cmd/relayproxy/DOCKERHUB_thomaspoignant.md"
      - name: Release readme to DockerHub gofeatureflag
        uses: ms-jpq/sync-dockerhub-readme@e2991ea1ba48832e73555cdbd5b82f5a2e91ee9b # v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: gofeatureflag/go-feature-flag
          readme: "./cmd/relayproxy/DOCKERHUB.md"

  doc-release:
    # doc release will create a new tag of the documentation en commit it in
    # the main branch. This new version of the doc will be release to gh-pages
    # when the GitHub Action called "Deploy to GitHub Pages" will be executed.
    runs-on: ubuntu-latest
    env:
      MAIN_BRANCH_NAME: main
      WEBSITE_DIR: website
    name: Create new documentation tag
    needs:
      - goreleaser
      - wasm-release
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: release
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0

      - name: Install dependencies
        working-directory: ./release/${{ env.WEBSITE_DIR }}
        run: npm install

      - name: Tagging a new version
        working-directory: ./release/${{ env.WEBSITE_DIR }}
        env:
          VERSION: ${{ env.VERSION }}
        run: npm run docusaurus docs:version "$VERSION"

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: ./release/${{ env.WEBSITE_DIR }}/.ci/go.mod
          check-latest: true

      - name: Clean up version.json
        working-directory: ./release/${{ env.WEBSITE_DIR }}/.ci
        run: go run versions.go

      - name: Checkout main branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ env.MAIN_BRANCH_NAME }}
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Copy version to main branch
        run: cp -rf release/${{ env.WEBSITE_DIR }}/ $MAIN_BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        env:
          VERSION: ${{ env.VERSION }}
        with:
          branch: create-new-doc-version-${{ env.VERSION }}
          title: "docs(docusaurus): Create a new documentation version ${{ env.VERSION }}"
          body: Automated pull request to create a new documentation version ${{ env.VERSION }}
          commit-message: Create a new documentation version ${{ env.VERSION }}
          labels: automerge
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  release-jsonschema:
    # release-jsonschema is opening a pull request to deploy a new jsonschema if needed
    runs-on: ubuntu-latest
    name: Release jsonschema
    needs:
      - goreleaser
      - wasm-release
    env:
      SCHEMA_LOCATION: .schema/flag-schema.json
      MAIN_BRANCH_NAME: main
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: release
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: ./release/go.mod
          check-latest: true

      - name: Build jsonschema-generator
        working-directory: ./release/
        run: make vendor && make build-jsonschema-generator

      - name: Create jsonschema
        working-directory: ./release/
        run: ./out/bin/jsonschema-generator --schema-location=./.schema/flag-schema.json

      - name: Checkout main branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ env.MAIN_BRANCH_NAME }}
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Copy version to main branch
        run: cp -rf release/$SCHEMA_LOCATION $MAIN_BRANCH_NAME/$SCHEMA_LOCATION

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        env:
          VERSION: ${{ env.VERSION }}
        with:
          branch: release-jsonschema-${{ env.VERSION }}
          title: "feat(jsonschema): Release a new version of the jsonschema ${{ env.VERSION }}"
          body: Automated pull request to release a new version of the jsonschema ${{ env.VERSION }}
          commit-message: Release a new version of the jsonschema ${{ env.VERSION }}
          labels: automerge
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  bump-relay-proxy-helm-chart:
    # bump-relay-proxy-helm-chart is opening a pull request to bump the appVersion field
    # in the Chart.yaml file of the helm-chart.
    runs-on: ubuntu-latest
    name: Bump Relay Proxy Helm Chart appVersion
    needs:
      - goreleaser
      - wasm-release
    env:
      CHART_YAML_FILE_LOCATION: cmd/relayproxy/helm-charts/relay-proxy/Chart.yaml
      MAIN_BRANCH_NAME: main
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Bump chart appVersion
        env:
          VERSION: ${{ env.VERSION }}
        run: make bump-helm-chart-version VERSION="$VERSION"

      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        env:
          VERSION: ${{ env.VERSION }}
        with:
          branch: bump-relay-proxy-helm-chart-${{ env.VERSION }}
          title: "chore(helm): Bump relay-proxy helm chart version ${{ env.VERSION }}"
          body: Automated pull request to bump relay-proxy helm chart version ${{ env.VERSION }}
          commit-message: Bump relay-proxy helm chart version ${{ env.VERSION }}
          labels: automerge
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
