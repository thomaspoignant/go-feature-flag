name: Release
on:
  release:
    types: [ published ]

jobs:
  pre-version-check:
    name: pre version check
    runs-on: ubuntu-latest
    steps:
      - name: Stop if pre-release
        run: |
          if [[ "${{ github.event.release.tag_name }}" =~ - ]]; then
            echo "This is a pre-release version, stopping workflow..."
            exit 1
          fi

  integration-tests:
    name: Integration Tests
    needs:
      - pre-version-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.18.0'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.8.2
      - run: make vendor
      - run: make provider-tests
  goreleaser:
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.18.0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  dockerhub-migration-cli:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag-migration-cli
          readme: "./cmd/migrationcli/DOCKERHUB.md"

  dockerhub-lint:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag-lint
          readme: "./cmd/lint/DOCKERHUB.md"

  dockerhub-relay-proxy:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag-relay-proxy
          readme: "./cmd/relayproxy/DOCKERHUB_deprecated.md"

  dockerhub-go-feature-flag-server:
    runs-on: ubuntu-latest
    name: Upload dockerhub readme
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Release readme to DockerHub
        uses: ms-jpq/sync-dockerhub-readme@v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          username: ${DOCKER_USERNAME}
          password: ${DOCKER_PASSWORD}
          repository: thomaspoignant/go-feature-flag
          readme: "./cmd/relayproxy/DOCKERHUB.md"

  doc-release:
    # doc release will create a new tag of the documentation en commit it in
    # the main branch. This new version of the doc will be release to gh-pages
    # when the GitHub Action called "Deploy to GitHub Pages" will be executed.
    runs-on: ubuntu-latest
    env:
      MAIN_BRANCH_NAME: main
      WEBSITE_DIR: website
    name: Create new documentation tag
    needs:
      - goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: release
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - uses: actions/setup-node@v3

      - name: Install dependencies
        working-directory: ./release/${{ env.WEBSITE_DIR }}
        run: npm install

      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1.2

      - name: Tagging a new version
        working-directory: ./release/${{ env.WEBSITE_DIR }}
        run: npm run docusaurus docs:version $GIT_TAG_NAME

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.MAIN_BRANCH_NAME }}
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          fetch-depth: 0

      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Copy version to main branch
        run: cp -rf release/${{ env.WEBSITE_DIR }}/ $MAIN_BRANCH_NAME

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: create-new-doc-version-${{ env.GIT_TAG_NAME }}
          title: Create a new documentation version ${{ env.GIT_TAG_NAME }}
          body: Automated pull request to create a new documentation version ${{ env.GIT_TAG_NAME }}
          commit-message: Create a new documentation version ${{ env.GIT_TAG_NAME }}
          labels: automerge
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  bump-relay-proxy-helm-chart:
    # bump-relay-proxy-helm-chart is opening a pull request to bump the appVersion field
    # in the Chart.yaml file of the helm-chart.
    runs-on: ubuntu-latest
    name: Bump Relay Proxy Helm Chart appVersion
    needs:
      - goreleaser
    env:
      CHART_YAML_FILE_LOCATION: cmd/relayproxy/helm-charts/relay-proxy/Chart.yaml
      MAIN_BRANCH_NAME: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: release
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.34.1

      - name: Get tag name
        uses: olegtarasov/get-tag@v2.1.2

      - name: Bump chart appVersion
        working-directory: ./release/
        run: yq -i ".appVersion=\"$GIT_TAG_NAME\"" $CHART_YAML_FILE_LOCATION

      - name: Bump chart version
        working-directory: ./release/
        run: yq -i ".version=\"${GIT_TAG_NAME#v}\"" $CHART_YAML_FILE_LOCATION

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: ${{ env.MAIN_BRANCH_NAME }}
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          fetch-depth: 0

      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Copy version to main branch
        run: cp -rf release/$CHART_YAML_FILE_LOCATION $MAIN_BRANCH_NAME/$CHART_YAML_FILE_LOCATION

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: bump-relay-proxy-helm-chart-${{ env.GIT_TAG_NAME }}
          title: Bump relay-proxy helm chart version ${{ env.GIT_TAG_NAME }}
          body: Automated pull request to bump relay-proxy helm chart version ${{ env.GIT_TAG_NAME }}
          commit-message: Bump relay-proxy helm chart version ${{ env.GIT_TAG_NAME }}
          labels: automerge
          assignees: thomaspoignant
          draft: false
          signoff: true
          delete-branch: true
          path: ${{ env.MAIN_BRANCH_NAME }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

  homebrew:
    name: Bump homebrew-core formula
    needs:
      - goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: tagName
        uses: olegtarasov/get-tag@v2.1.2

      - uses: mislav/bump-homebrew-formula-action@v2
        with:
          formula-name: go-feature-flag-relay-proxy
          tag-name: ${{ steps.tagName.outputs.tag }}
          download-url: https://github.com/${{ github.repository }}.git
          commit-message: |
            {{formulaName}} {{version}}
            
            Version `{{version}}` of the go-feature-flag-relay-proxy is available.
            This PR bump the version in homebrew.
            
            Check https://gofeatureflag.org if you want to have more information about GO Feature Flag.
            
            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
