"use strict";(self.webpackChunkgo_feature_flag_website=self.webpackChunkgo_feature_flag_website||[]).push([[25947],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(96540);const l={},o=a.createContext(l);function i(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(o.Provider,{value:t},e.children)}},59807:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"tooling/generate","title":"\ud83c\udfd7\ufe0f Generate OpenFeature flag manifest","description":"Evaluate feature flags directly in your terminal","source":"@site/docs/tooling/generate.md","sourceDirName":"tooling","slug":"/tooling/generate","permalink":"/docs/next/tooling/generate","draft":false,"unlisted":false,"editUrl":"https://github.com/thomaspoignant/go-feature-flag/tree/main/website/docs/tooling/generate.md","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"sidebar_position":30,"title":"\ud83c\udfd7\ufe0f Generate OpenFeature flag manifest","description":"Evaluate feature flags directly in your terminal"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udfaf Evaluate CLI","permalink":"/docs/next/tooling/evaluate"},"next":{"title":"\ud83d\udd04 Migrate from v0.x to v1.x","permalink":"/docs/next/tooling/migrate_v0_v1"}}');var l=n(74848),o=n(28453);const i={sidebar_position:30,title:"\ud83c\udfd7\ufe0f Generate OpenFeature flag manifest",description:"Evaluate feature flags directly in your terminal"},r="\ud83c\udfd7\ufe0f Generate OpenFeature flag manifest",s={},c=[{value:"Add information to your flags",id:"add-information-to-your-flags",level:2},{value:"Install the Command Line",id:"install-the-command-line",level:2},{value:"Generate the flag manifest",id:"generate-the-flag-manifest",level:2},{value:"Example of flag manifest",id:"example-of-flag-manifest",level:3},{value:"Use the OpenFeature cli to generate the flag accessors",id:"use-the-openfeature-cli-to-generate-the-flag-accessors",level:2},{value:"Output file example",id:"output-file-example",level:3}];function u(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"\ufe0f-generate-openfeature-flag-manifest",children:"\ud83c\udfd7\ufe0f Generate OpenFeature flag manifest"})}),"\n",(0,l.jsx)(t.admonition,{type:"warning",children:(0,l.jsx)(t.p,{children:"This feature is experimental and may change in the future."})}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.a,{href:"https://github.com/open-feature/cli",children:"OpenFeature cli"})," allow code generation for flag accessors for OpenFeature.",(0,l.jsx)(t.br,{}),"\n","This allows to have a type safe way to access your flags in your code based on a flag manifest you can provide to the OpenFeature cli."]}),"\n",(0,l.jsxs)(t.p,{children:["To generate the OpenFeature flag manifest you can use the ",(0,l.jsx)(t.code,{children:"generate manifest"})," command of the ",(0,l.jsx)(t.code,{children:"go-feature-flag-cli"}),",\nit will generate a flag manifest file compatible with the ",(0,l.jsx)(t.strong,{children:(0,l.jsx)(t.code,{children:"OpenFeature cli"})})," that you can use."]}),"\n",(0,l.jsx)(t.h2,{id:"add-information-to-your-flags",children:"Add information to your flags"}),"\n",(0,l.jsxs)(t.p,{children:["To generate the flag manifest you need to provide information about your flags in your configuration file.",(0,l.jsx)(t.br,{}),"\n","To do this we leverage the ",(0,l.jsx)(t.code,{children:"metadata"})," field of your flags in your configuration file, to provide information about the flag."]}),"\n",(0,l.jsxs)(t.p,{children:["You need to provide 2 fields in the ",(0,l.jsx)(t.code,{children:"metadata"})," to allow the flag to be generated in the flag manifest:"]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"defaultValue"}),": ",(0,l.jsx)(t.strong,{children:"(mandatory)"})," The default value of the flag."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"description"}),": A description of the flag."]}),"\n"]}),"\n",(0,l.jsx)(t.admonition,{type:"info",children:(0,l.jsxs)(t.p,{children:["If you don't provide a ",(0,l.jsx)(t.code,{children:"defaultValue"})," field in your metadata the flag will be ignored in the flag manifest."]})}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="flags.goff.yaml"',children:"enableFeatureA:\n  variations:\n    var_a: false\n    var_b: true\n  defaultRule:\n    variation: var_a\n  metadata:\n    # highlight-next-line\n    description: Controls whether Feature A is enabled.\n    # highlight-next-line\n    defaultValue: false\n\nusernameMaxLength:\n  variations:\n    var_a: 20\n    var_b: 30\n  defaultRule:\n    variation: var_a\n  metadata:\n    # highlight-next-line\n    description: Maximum allowed length for usernames.\n    # highlight-next-line\n    defaultValue: 50\n\n# ...\n"})}),"\n",(0,l.jsx)(t.h2,{id:"install-the-command-line",children:"Install the Command Line"}),"\n",(0,l.jsxs)(t.p,{children:["Check the ",(0,l.jsx)(t.a,{href:"./cli",children:"installation guide"})," to install the ",(0,l.jsx)(t.code,{children:"go-feature-flag-cli"}),"."]}),"\n",(0,l.jsx)(t.h2,{id:"generate-the-flag-manifest",children:"Generate the flag manifest"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:'go-feature-flag-cli generate manifest \\\n  --config="<location_of_your_flag_configuration_file>" \\\n  --flag_manifest_destination="<destination_of_your_flag_manifest>"\n'})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"param"}),(0,l.jsx)(t.th,{children:"description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"--flag_manifest_destination"})}),(0,l.jsx)(t.td,{children:"(mandatory) The destination where your manifest will be stored."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"--config"})}),(0,l.jsxs)(t.td,{children:["The location of your configuration file. ",(0,l.jsxs)(t.em,{children:["(if not provided we will search a file named ",(0,l.jsx)(t.code,{children:"flags.goff.yaml"})]})," in one of this directories ",(0,l.jsx)(t.code,{children:"./"}),", ",(0,l.jsx)(t.code,{children:"/goff/"}),", ",(0,l.jsx)(t.code,{children:"/etc/opt/goff/"}),"."]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"--format"})}),(0,l.jsxs)(t.td,{children:["The format of your configuration flag ",(0,l.jsxs)(t.em,{children:["(acceptable values:",(0,l.jsx)(t.code,{children:"yaml"}),", ",(0,l.jsx)(t.code,{children:"json"}),", ",(0,l.jsx)(t.code,{children:"toml"}),")"]}),".",(0,l.jsx)("br",{}),"Default: ",(0,l.jsx)(t.strong,{children:(0,l.jsx)(t.code,{children:"yaml"})})]})]})]})]}),"\n",(0,l.jsx)(t.h3,{id:"example-of-flag-manifest",children:"Example of flag manifest"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-json",metastring:'title="flag_manifest.json"',children:'{\n  "flags": {\n    "enableFeatureA": {\n      "flagType": "boolean",\n      "defaultValue": false,\n      "description": "Controls whether Feature A is enabled."\n    },\n    "usernameMaxLength": {\n      "flagType": "integer",\n      "defaultValue": 50,\n      "description": "Maximum allowed length for usernames."\n    },\n    "greetingMessage": {\n      "flagType": "string",\n      "defaultValue": "Hello there!",\n      "description": "The message to use for greeting users."\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(t.h2,{id:"use-the-openfeature-cli-to-generate-the-flag-accessors",children:"Use the OpenFeature cli to generate the flag accessors"}),"\n",(0,l.jsxs)(t.p,{children:["To install the OpenFeature cli you can follow the ",(0,l.jsx)(t.a,{href:"https://github.com/open-feature/cli",children:"installation guide"})," from the repository."]}),"\n",(0,l.jsxs)(t.p,{children:["Once you have the OpenFeature cli installed you can use the ",(0,l.jsx)(t.code,{children:"generate"})," command to generate the flag accessors."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-shell",children:'openfeature-cli generate go \\\n  --flag_manifest_path="<destination_of_your_flag_manifest>" \\\n  --package_name="<name of your GO package>" \\\n  --output_path="<destination_go_file>"\n'})}),"\n",(0,l.jsxs)(t.admonition,{type:"info",children:[(0,l.jsx)(t.mdxAdmonitionTitle,{}),(0,l.jsx)(t.p,{children:"Here the example is using code generation in GO, but react and other languages are supported."}),(0,l.jsxs)(t.p,{children:["Refer to the ",(0,l.jsx)(t.a,{href:"https://github.com/open-feature/cli",children:"OpenFeature cli documentation"})," for more information."]})]}),"\n",(0,l.jsx)(t.p,{children:"As the result of this command, you will have a file with the flag accessors generated based on the flag manifest you provided.\nYou will be able to use a type-safe way to access your flags in your code."}),"\n",(0,l.jsx)(t.h3,{id:"output-file-example",children:"Output file example"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-go",children:'// AUTOMATICALLY GENERATED BY OPENFEATURE CODEGEN, DO NOT EDIT.\npackage feature_flags\n\nimport (\n\t"context"\n\t"github.com/open-feature/go-sdk/openfeature"\n)\n\ntype BooleanProvider func(ctx context.Context, evalCtx openfeature.EvaluationContext) (bool, error)\ntype BooleanProviderDetails func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.BooleanEvaluationDetails, error)\ntype FloatProvider func(ctx context.Context, evalCtx openfeature.EvaluationContext) (float64, error)\ntype FloatProviderDetails func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.FloatEvaluationDetails, error)\ntype IntProvider func(ctx context.Context, evalCtx openfeature.EvaluationContext) (int64, error)\ntype IntProviderDetails func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.IntEvaluationDetails, error)\ntype StringProvider func(ctx context.Context, evalCtx openfeature.EvaluationContext) (string, error)\ntype StringProviderDetails func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.StringEvaluationDetails, error)\n\nvar client openfeature.IClient = nil\n// Controls whether Feature A is enabled.\nvar EnableFeatureA = struct {\n    // Value returns the value of the flag EnableFeatureA,\n    // as well as the evaluation error, if present.\n    Value BooleanProvider\n\n    // ValueWithDetails returns the value of the flag EnableFeatureA,\n    // the evaluation error, if any, and the evaluation details.\n    ValueWithDetails BooleanProviderDetails\n}{\n    Value: func(ctx context.Context, evalCtx openfeature.EvaluationContext) (bool, error) {\n        return client.BooleanValue(ctx, "enableFeatureA", false, evalCtx)\n    },\n    ValueWithDetails: func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.BooleanEvaluationDetails, error){\n        return client.BooleanValueDetails(ctx, "enableFeatureA", false, evalCtx)\n    },\n}\n// Maximum allowed length for usernames.\nvar UsernameMaxLength = struct {\n    // Value returns the value of the flag UsernameMaxLength,\n    // as well as the evaluation error, if present.\n    Value IntProvider\n\n    // ValueWithDetails returns the value of the flag UsernameMaxLength,\n    // the evaluation error, if any, and the evaluation details.\n    ValueWithDetails IntProviderDetails\n}{\n    Value: func(ctx context.Context, evalCtx openfeature.EvaluationContext) (int64, error) {\n        return client.IntValue(ctx, "usernameMaxLength", 50, evalCtx)\n    },\n    ValueWithDetails: func(ctx context.Context, evalCtx openfeature.EvaluationContext) (openfeature.IntEvaluationDetails, error){\n        return client.IntValueDetails(ctx, "usernameMaxLength", 50, evalCtx)\n    },\n}\n\nfunc init() {\n\tclient = openfeature.GetApiInstance().GetClient()\n}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}}}]);