"use strict";(self.webpackChunkgo_feature_flag_website=self.webpackChunkgo_feature_flag_website||[]).push([[66072],{11099:(e,t,n)=>{n.d(t,{f:()=>o,q:()=>i});n(96540);var r=n(74848);const o=()=>(0,r.jsx)("i",{className:"fa-solid fa-xmark text-red-500"}),i=()=>(0,r.jsx)("i",{className:"fa-solid fa-check text-green-500"})},11470:(e,t,n)=>{n.d(t,{A:()=>T});var r=n(96540),o=n(34164),i=n(17559),l=n(23104),s=n(56347),a=n(205),c=n(57485),d=n(31682),h=n(70679);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return u(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,d.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function f({value:e,tabValues:t}){return t.some(t=>t.value===e)}function x({queryString:e=!1,groupId:t}){const n=(0,s.W6)(),o=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(o),(0,r.useCallback)(e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})},[o,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,i=p(e),[l,s]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,d]=x({queryString:n,groupId:o}),[u,g]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,o]=(0,h.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&o.set(e)},[t,o])]}({groupId:o}),m=(()=>{const e=c??u;return f({value:e,tabValues:i})?e:null})();(0,a.A)(()=>{m&&s(m)},[m]);return{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),g(e)},[d,g,i]),tabValues:i}}var m=n(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function j({className:e,block:t,selectedValue:n,selectValue:r,tabValues:i}){const s=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.a_)(),c=e=>{const t=e.currentTarget,o=s.indexOf(t),l=i[o].value;l!==n&&(a(t),r(l))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},e),children:i.map(({value:e,label:t,attributes:r})=>(0,b.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{s.push(e)},onKeyDown:d,onClick:c,...r,className:(0,o.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function w(e){const t=g(e);return(0,b.jsxs)("div",{className:(0,o.A)(i.G.tabs.container,"tabs-container",y.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function T(e){const t=(0,m.A)();return(0,b.jsx)(w,{...e,children:u(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var r=n(34164);const o={tabItem:"tabItem_Ymn6"};var i=n(74848);function l({children:e,hidden:t,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,n),hidden:t,children:e})}},23887:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"relay-proxy/observability","title":"\ud83d\udc40 Observability","description":"Logging, Monitoring and Tracing of the relay proxy.","source":"@site/versioned_docs/version-v1.46.0/relay-proxy/observability.mdx","sourceDirName":"relay-proxy","slug":"/relay-proxy/observability","permalink":"/docs/v1.46.0/relay-proxy/observability","draft":false,"unlisted":false,"editUrl":"https://github.com/thomaspoignant/go-feature-flag/tree/main/website/versioned_docs/version-v1.46.0/relay-proxy/observability.mdx","tags":[],"version":"v1.46.0","sidebarPosition":80,"frontMatter":{"sidebar_position":80,"description":"Logging, Monitoring and Tracing of the relay proxy."},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udf10 API endpoints","permalink":"/docs/v1.46.0/relay-proxy/relay_proxy_endpoints"},"next":{"title":"\ud83d\udcc8 Profiling","permalink":"/docs/v1.46.0/relay-proxy/profiling"}}');var o=n(74848),i=n(28453),l=n(11470),s=n(19365),a=n(11099);const c={sidebar_position:80,description:"Logging, Monitoring and Tracing of the relay proxy."},d="\ud83d\udc40 Observability",h={},u=[{value:"Overview",id:"overview",level:2},{value:"Logging",id:"logging",level:2},{value:"Tracing",id:"tracing",level:2},{value:"Monitoring",id:"monitoring",level:2},{value:"<code>/health</code>",id:"health",level:3},{value:"<code>/info</code>",id:"info",level:3},{value:"<code>/metrics</code>",id:"metrics",level:3},{value:"Use specific port for the monitoring",id:"use-specific-port-for-the-monitoring",level:2}];function p(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"-observability",children:"\ud83d\udc40 Observability"})}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"Observability is crucial to know how your applications are working. And this is probably something you want to have for\nyour feature flag solution as well.\nThis is why GO Feature Flag relay-proxy offers out of the box some ways of monitor what is happening."}),"\n",(0,o.jsx)(t.h2,{id:"logging",children:"Logging"}),"\n",(0,o.jsxs)(t.p,{children:["GO Feature Flag relay proxy is using ",(0,o.jsx)(t.a,{href:"https://pkg.go.dev/go.uber.org/zap",children:"Zap"})," as the logging library."]}),"\n",(0,o.jsxs)(t.p,{children:["By default, the relay proxy is logging to the standard output with a JSON format in level ",(0,o.jsx)(t.code,{children:"INFO"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["You can change the log level by setting the ",(0,o.jsx)(t.code,{children:"logLevel"})," in your configuration file and you can choose the log format by setting the ",(0,o.jsx)(t.code,{children:"logFormat"})," options."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",metastring:'title="goff-proxy.yaml"',children:"#...\nlogLevel: ERROR\nlogFormat: json\n#...\n"})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Field name"}),(0,o.jsx)(t.th,{style:{textAlign:"center"},children:"Mandatory"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Default"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"logLevel"}),(0,o.jsx)(t.td,{style:{textAlign:"center"},children:(0,o.jsx)(a.f,{})}),(0,o.jsx)(t.td,{children:"string"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"INFO"})})}),(0,o.jsxs)(t.td,{children:["The log level to use for the relay proxy.",(0,o.jsx)("br",{})," Available values are ",(0,o.jsx)(t.code,{children:"ERROR"}),", ",(0,o.jsx)(t.code,{children:"WARN"}),", ",(0,o.jsx)(t.code,{children:"INFO"}),", ",(0,o.jsx)(t.code,{children:"DEBUG"}),"."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"logFormat"}),(0,o.jsx)(t.td,{style:{textAlign:"center"},children:(0,o.jsx)(a.f,{})}),(0,o.jsx)(t.td,{children:"string"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"json"})})}),(0,o.jsxs)(t.td,{children:[(0,o.jsxs)("p",{children:["The format to use for structured logs from the relay proxy.",(0,o.jsx)("br",{}),"Valid values are ",(0,o.jsx)(t.code,{children:"json"})," and ",(0,o.jsx)(t.code,{children:"logfmt"}),"."]}),(0,o.jsx)("p",{children:(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:[(0,o.jsx)(t.strong,{children:"json"}),": Will output the logs in ",(0,o.jsx)(t.code,{children:"JSON"})," format (default)."]}),(0,o.jsxs)("li",{children:[(0,o.jsx)(t.strong,{children:"logfmt"}),": Will output the log as text in the console."]})]})})]})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"tracing",children:"Tracing"}),"\n",(0,o.jsx)(t.p,{children:"The relay proxy will attempt to send traces to an OpenTelemetry collector or\ncompatible agent if an OpenTelemetry exporter endpoint is configured."}),"\n",(0,o.jsxs)(t.p,{children:["To set the endpoint, set the ",(0,o.jsx)(t.code,{children:"OTEL_EXPORTER_OTLP_ENDPOINT"})," environment variable\nor set ",(0,o.jsx)(t.code,{children:"otel.exporter.otlp.endpoint"})," in the configuration file."]}),"\n",(0,o.jsxs)(l.A,{groupId:"code",children:[(0,o.jsx)(s.A,{value:"env",label:"Environment variable",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-shell",children:"export OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317\n"})})}),(0,o.jsx)(s.A,{value:"yaml",label:"Configuration file",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",metastring:'title="goff-proxy.yaml"',children:'# ...\notel:\n  exporter:\n    otlp:\n      endpoint: "http://localhost:4317"\n'})})})]}),"\n",(0,o.jsxs)(t.p,{children:["See ",(0,o.jsx)(t.a,{href:"https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/",children:"the OpenTelemetry documentation"})," for more information."]}),"\n",(0,o.jsxs)(t.p,{children:["All your requests will be traced and sent to the collector with the service name ",(0,o.jsx)(t.strong,{children:(0,o.jsx)(t.code,{children:"go-feature-flag"})}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["If you want to try the OpenTelemetry integration locally, follow this ",(0,o.jsx)(t.a,{href:"https://github.com/thomaspoignant/go-feature-flag/tree/main/cmd/relayproxy/testdata/opentelemetry",children:"example"}),"\nto set up Jaeger and see your traces."]})}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"relay proxy"})," offers some endpoints for you to be able to see how it behaves."]}),"\n",(0,o.jsx)(t.h3,{id:"health",children:(0,o.jsx)(t.code,{children:"/health"})}),"\n",(0,o.jsxs)(t.p,{children:["Making a ",(0,o.jsx)(t.strong,{children:"GET"})," request to the URL path ",(0,o.jsx)(t.code,{children:"/health"})," will tell you if the relay proxy is ready to\nserve traffic."]}),"\n",(0,o.jsx)(t.p,{children:"This is useful especially for loadbalancer to know that they can send traffic to the service."}),"\n",(0,o.jsx)(t.h3,{id:"info",children:(0,o.jsx)(t.code,{children:"/info"})}),"\n",(0,o.jsxs)(t.p,{children:["Making a ",(0,o.jsx)(t.strong,{children:"GET"})," request to the URL path ",(0,o.jsx)(t.code,{children:"/info"})," will give you information about the actual state\nof the relay proxy."]}),"\n",(0,o.jsx)(t.h3,{id:"metrics",children:(0,o.jsx)(t.code,{children:"/metrics"})}),"\n",(0,o.jsx)(t.p,{children:"This endpoint is providing metrics about the relay proxy in the prometheus format."}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"use-specific-port-for-the-monitoring",children:"Use specific port for the monitoring"}),"\n",(0,o.jsxs)(t.p,{children:["You can configure a different port for the monitoring endpoints.",(0,o.jsx)(t.br,{}),"\n","This is useful if you want to expose the monitoring endpoints on a different port than the main service."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",metastring:'title="goff-proxy.yaml"',children:"# ...\nmonitoringPort: 1032 # only the monitoring endpoints will be exposed on this port\n# ...\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"By default the monitoring endpoints are exposed on the same port as the main service."})})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var r=n(96540);const o={},i=r.createContext(o);function l(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);